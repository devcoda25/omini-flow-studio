{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/dev28/Desktop/projects/ominflow-studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/dev28/Desktop/projects/ominflow-studio/src/ai/flows/ai-content-enhancement.ts"],"sourcesContent":["// src/ai/flows/ai-content-enhancement.ts\n'use server';\n\n/**\n * @fileOverview An AI-powered content enhancement flow.\n *\n * - aiContentEnhancement - A function that enhances the given content using AI.\n * - AIContentEnhancementInput - The input type for the aiContentEnhancement function.\n * - AIContentEnhancementOutput - The return type for the aiContentEnhancement function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AIContentEnhancementInputSchema = z.object({\n  content: z.string().describe('The content to be enhanced.'),\n  language: z.string().optional().describe('The target language for translation, if any.'),\n  channel: z.string().optional().describe('The communication channel (e.g., WhatsApp, SMS, email).'),\n  audience: z.string().optional().describe('The intended audience for the content.'),\n});\nexport type AIContentEnhancementInput = z.infer<typeof AIContentEnhancementInputSchema>;\n\nconst AIContentEnhancementOutputSchema = z.object({\n  enhancedContent: z.string().describe('The AI-enhanced content.'),\n});\nexport type AIContentEnhancementOutput = z.infer<typeof AIContentEnhancementOutputSchema>;\n\nexport async function aiContentEnhancement(input: AIContentEnhancementInput): Promise<AIContentEnhancementOutput> {\n  return aiContentEnhancementFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'aiContentEnhancementPrompt',\n  input: {schema: AIContentEnhancementInputSchema},\n  output: {schema: AIContentEnhancementOutputSchema},\n  prompt: `You are an AI assistant designed to enhance the content of messages.\n\n  You will be provided with the original content, the target language (if any), the communication channel, and the intended audience.\n  Based on this information, you will:\n  - Improve grammar and clarity.\n  - Suggest alternative phrasing to better suit the channel and audience.\n  - Translate the message into the specified language, if provided.\n\n  Original Content: {{{content}}}\n  Target Language: {{language}}\n  Channel: {{channel}}\n  Intended Audience: {{audience}}}\n\n  Enhanced Content:`,\n});\n\nconst aiContentEnhancementFlow = ai.defineFlow(\n  {\n    name: 'aiContentEnhancementFlow',\n    inputSchema: AIContentEnhancementInputSchema,\n    outputSchema: AIContentEnhancementOutputSchema,\n  },\n  async input => {\n    const {text} = await prompt(input);\n    return {enhancedContent: text!};\n  }\n);\n\n"],"names":[],"mappings":"AAAA,yCAAyC;;;;;AAGzC;;;;;;CAMC,GAED;AACA;AAAA;;;;;AAEA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC7B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IACzC,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IACxC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC3C;AAGA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvC;AAGO,eAAe,qBAAqB,KAAgC;IACzE,OAAO,yBAAyB;AAClC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA+B;IAC/C,QAAQ;QAAC,QAAQ;IAAgC;IACjD,QAAQ,CAAC;;;;;;;;;;;;;mBAaQ,CAAC;AACpB;AAEA,MAAM,2BAA2B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC5C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,OAAO;IAC5B,OAAO;QAAC,iBAAiB;IAAK;AAChC;;;IAjCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///home/dev28/Desktop/projects/ominflow-studio/src/ai/flows/ai-flow-suggestions.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview AI-powered flow configuration suggestions.\n *\n * - generateFlowSuggestions - A function that generates AI-driven suggestions for optimizing flow configuration.\n * - GenerateFlowSuggestionsInput - The input type for the generateFlowSuggestions function.\n * - GenerateFlowSuggestionsOutput - The return type for the generateFlowSuggestions function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateFlowSuggestionsInputSchema = z.object({\n  flowDescription: z.string().describe('A description of the current flow.'),\n  flowData: z.string().describe('The JSON representation of the current flow data.'),\n});\nexport type GenerateFlowSuggestionsInput = z.infer<typeof GenerateFlowSuggestionsInputSchema>;\n\nconst GenerateFlowSuggestionsOutputSchema = z.object({\n  suggestions: z.string().describe('AI-driven suggestions for optimizing the flow configuration.'),\n});\nexport type GenerateFlowSuggestionsOutput = z.infer<typeof GenerateFlowSuggestionsOutputSchema>;\n\nexport async function generateFlowSuggestions(input: GenerateFlowSuggestionsInput): Promise<GenerateFlowSuggestionsOutput> {\n  return generateFlowSuggestionsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateFlowSuggestionsPrompt',\n  input: {schema: GenerateFlowSuggestionsInputSchema},\n  output: {schema: GenerateFlowSuggestionsOutputSchema},\n  prompt: `You are an AI expert in omni-channel flow design. Given the flow description and data, provide suggestions for optimizing the flow configuration, focusing on node sequence, content enhancement, and channel-specific best practices, such as alternative node sequences or content enhancements.\n\nFlow Description: {{{flowDescription}}}\nFlow Data: {{{flowData}}}\n\nSuggestions:`,\n  config: {\n    safetySettings: [\n      {\n        category: 'HARM_CATEGORY_HATE_SPEECH',\n        threshold: 'BLOCK_ONLY_HIGH',\n      },\n      {\n        category: 'HARM_CATEGORY_DANGEROUS_CONTENT',\n        threshold: 'BLOCK_NONE',\n      },\n      {\n        category: 'HARM_CATEGORY_HARASSMENT',\n        threshold: 'BLOCK_MEDIUM_AND_ABOVE',\n      },\n      {\n        category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n        threshold: 'BLOCK_LOW_AND_ABOVE',\n      },\n    ],\n  },\n});\n\nconst generateFlowSuggestionsFlow = ai.defineFlow(\n  {\n    name: 'generateFlowSuggestionsFlow',\n    inputSchema: GenerateFlowSuggestionsInputSchema,\n    outputSchema: GenerateFlowSuggestionsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return {suggestions: output!.suggestions};\n  }\n);\n"],"names":[],"mappings":";;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;AAEA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACrC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,sCAAsC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAGO,eAAe,wBAAwB,KAAmC;IAC/E,OAAO,4BAA4B;AACrC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAkC;IAClD,QAAQ;QAAC,QAAQ;IAAmC;IACpD,QAAQ,CAAC;;;;;YAKC,CAAC;IACX,QAAQ;QACN,gBAAgB;YACd;gBACE,UAAU;gBACV,WAAW;YACb;YACA;gBACE,UAAU;gBACV,WAAW;YACb;YACA;gBACE,UAAU;gBACV,WAAW;YACb;YACA;gBACE,UAAU;gBACV,WAAW;YACb;SACD;IACH;AACF;AAEA,MAAM,8BAA8B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC/C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;QAAC,aAAa,OAAQ,WAAW;IAAA;AAC1C;;;IA7CoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///home/dev28/Desktop/projects/ominflow-studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {aiContentEnhancement as '40593c28e6a8b051718901262dd554eac66782360d'} from 'ACTIONS_MODULE0'\nexport {generateFlowSuggestions as '4029cdc1eec975717fc65ed5f1c2ea4cc8bb44f1ed'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///home/dev28/Desktop/projects/ominflow-studio/src/app/studio-client-page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/studio-client-page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/studio-client-page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///home/dev28/Desktop/projects/ominflow-studio/src/app/studio-client-page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/studio-client-page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/studio-client-page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file:///home/dev28/Desktop/projects/ominflow-studio/src/app/page.tsx"],"sourcesContent":["import StudioClientPage from './studio-client-page';\n\nexport default function Home() {\n  return <StudioClientPage />;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,uIAAA,CAAA,UAAgB;;;;;AAC1B","debugId":null}}]
}